version: "3.8"

services:
  # Kafka Broker
  kafka:
    image: bitnami/kafka:3.7.0
    container_name: inventory-kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,PLAINTEXT_HOST://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://inventory-kafka:9092,PLAINTEXT_HOST://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@inventory-kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - inventory-net

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: inventory-kafka-ui
    ports:
      - "8081:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=inventory-kafka:9092
    depends_on:
      - kafka
    networks:
      - inventory-net

  # Inventory Service (Spring Boot)
  inventory-service:
    build: .
    container_name: inventory-service
    ports:
      - "8080:8080"
    environment:
      SPRING_DATA_MONGODB_URI: "mongodb+srv://Raghav0802:raghav@cluster0.l1mrrhj.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"
      JWT_SECRET: "your-very-strong-secret-key-1234567890"
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "inventory-kafka:9092"
    depends_on:
      - kafka
      - elasticsearch
    networks:
      - inventory-net

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: inventory-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - inventory-net

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.0
    container_name: inventory-kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - inventory-net



    # Logstash
#  logstash:
#      image: docker.elastic.co/logstash/logstash:8.15.0
#      container_name: inventory-logstash
#      ports:
#        - "5044:5044"   # Beats input
#        - "9600:9600"   # Monitoring API
#      volumes:
#        - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
#      environment:
#        - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#      depends_on:
#        - kafka
#        - elasticsearch
#      networks:
#        - inventory-net

volumes:
  kafka_data:

networks:
  inventory-net:
    name: inventory-net
    external: true
